@model RegisterResultModel
@inject IEventPublisher eventPublisher
@{
    Layout = "_Root.Head";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
    Html.AddCssFileParts(ResourceLocation.Head, "~/Themes/Sidney/Content/css/pages/auth.min.css", "~/Themes/Sidney/Content/css/pages/auth.css");

    //event
    eventPublisher.Publish(new PageRenderingEvent(this.Html, false));
}

<div class="page auth-page">
    <div class="page-container">
        <div class="auth-form">
            @await Component.InvokeAsync("Logo")

            <form asp-route="RegisterResult" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post">
                <div class="result">
                    @Model.Result
                </div>
                <div asp-validation-summary="ModelOnly" class="message-error"></div>
                <div class="buttons">
                    <button type="submit" class="register-continue-button">
                        @T("Account.Register.Result.Continue")
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>