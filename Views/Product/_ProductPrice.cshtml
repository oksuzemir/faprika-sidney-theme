@model ProductDetailsModel.ProductPriceModel

<div class="product-price" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
    @if (string.IsNullOrWhiteSpace(Model.PriceWithDiscount))
    {
        @*price*@
        <div class="product-price">
            <span itemprop="price" content="@Model.PriceValue.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)" class="price-value-@(Model.ProductId)">
                @Html.Raw(Model.Price)
            </span>
        </div>
        if (!string.IsNullOrWhiteSpace(Model.OldPrice))
        {
            @*old price*@
            <div class="product-old-price">
                <span>@Model.OldPrice</span>
                @await Html.PartialAsync("_Discounted")
            </div>
        }
    }
    else
    {
        @*discounted price*@
        <div class="product-price">
            <span itemprop="price" content="@Model.PriceValue.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)" class="price-value-@(Model.ProductId)">
                @Html.Raw(Model.PriceWithDiscount)
            </span>
        </div>
        if (!string.IsNullOrWhiteSpace(Model.OldPrice))
        {
            @*old price*@
            <div class="product-old-price">
                <span>@Model.OldPrice</span>
                @await Html.PartialAsync("_Discounted")
            </div>
        }
        else
        {
            @*price*@
            <div class="product-old-price">
                <span>@Model.Price</span>
            </div>
        }
    }

    @if (!string.IsNullOrEmpty(Model.CurrencyCode))
    {
        <meta itemprop="priceCurrency" content="@Model.CurrencyCode" />
    }
    <link itemprop="availability" href="http://schema.org/InStock" />
</div>
